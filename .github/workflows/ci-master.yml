name: Deploy CI

on:
  # push:
  #   branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      CLOUDINARY_URL: ${{ secrets.CLOUDINARY_URL }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Migrate
      run: |
        python manage.py migrate

    - name: Run Scripts
      run: |
        python manage.py runscript add_data 
      
    - name: Run Tests
      run: |
        python manage.py test
        
    - name: Deploy to Ubuntu Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /home/ubuntu/deploy/myplatform/src
          git pull origin master
          sudo docker compose restart 
          
        # source .venv /bin/activate
        # git fetch origin master
        # git reset --hard origin/master
        # git clean -fd
        # pip install -r requirements.txt
        # python manage.py migrate
        # python manage.py runscript add_data
        # python manage.py collectstatic --noinput
        #sudo systemctl restart gunicorn

    # - name: Login to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3

    # - name: Build and push
    #   uses: docker/build-push-action@v6
    #   with:
    #     platforms: linux/amd64,linux/arm64
    #     push: true
    #     tags: ${{ secrets.DOCKER_USERNAME }}/myplatform:gitactions


